name: CI

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9]
        conda_env: test_env

    env: 
      PYVER: ${{ matrix.python-version }}
      CONDA_ENV: ${{ matrix.conda-env }}

    steps:
    - uses: actions/checkout@v1

    - name: Setup Information
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

    - name: Create Environment
      shell: bash
      run: |
        eval "$(conda shell.bash hook)" && conda activate
        python devtools/scripts/create_conda_env.py -n=test -p=$PYVER devtools/conda-envs/$CONDA_ENV.yaml

    - name: Install package
      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        python -m pip install . --no-deps
        conda list

    - name: Libxc Python Library
      shell: bash
      run: |
        eval "$(conda shell.bash hook)" && conda activate test
        cd ~
        wget --content-disposition  http://www.tddft.org/programs/libxc/down.php?file=5.0.0/libxc-5.0.0.tar.gz
        tar xf libxc-5.0.0.tar.gz
        cd libxc-5.0.0/
        python -m pip install . --no-deps

    - name: Environment Information
      shell: bash
      run: |
        eval "$(conda shell.bash hook)" && conda activate test
        conda list --show-channel-urls

    - name: Run Pytest
      # conda setup requires this special shell
      shell: bash -l {0}

      run: |
        pytest -v --cov=n2v --cov-report=xml --color=yes n2v/tests/

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
