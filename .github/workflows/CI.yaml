name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cfg:
        - conda-env: test_env
          python-version: 3.7
        # os: [macOS-latest, ubuntu-latest, windows-latest]
        # python-version: [3.7, 3.8, 3.9]
        # conda_env: [test_env]

    env: 
      PYVER: ${{ matrix.cfg.python-version }}
      CONDA_ENV: ${{ matrix.cfg.conda-env }}

    steps:
    - uses: actions/checkout@v1

    - name: Setup Information
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a
        conda --version
    - name: Create Environment
      shell: bash
      run: |
        eval "$(conda shell.bash hook)" && conda activate
        python devtools/scripts/create_conda_env.py -n=test -p=$PYVER devtools/conda-envs/$CONDA_ENV.yaml
    - name: Install package
      shell: bash
      run: |
        eval "$(conda shell.bash hook)" && conda activate test
        python -m pip install .
        conda list

    - name: Libxc Python Library
      shell: bash
      run: |
        eval "$(conda shell.bash hook)" && conda activate test
        cd ~
        wget --content-disposition  http://www.tddft.org/programs/libxc/down.php?file=5.0.0/libxc-5.0.0.tar.gz
        tar xf libxc-5.0.0.tar.gz
        cd libxc-5.0.0/
        python -m pip install . --no-deps

    - name: Environment Information
      shell: bash
      run: |
        eval "$(conda shell.bash hook)" && conda activate test
        conda list --show-channel-urls

    - name: Run Pytest
      shell: bash
      run: |
        eval "$(conda shell.bash hook)" && conda activate test
        pytest -v --cov=n2v --cov-report=xml --color=yes n2v/tests/

    - name: CodeCov
      uses: codecov/codecov-action@v1
      # with:
      #   file: ./coverage.xml
      #   flags: unittests
      #   name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
